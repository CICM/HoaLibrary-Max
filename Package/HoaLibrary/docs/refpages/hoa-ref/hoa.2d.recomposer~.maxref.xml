<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="hoa.2d.recomposer~" module="hoa">

	<digest>
		Recomposes a 2d plane wave decomposition into circular harmonics
	</digest>

	<description>
		<o>hoa.2d.recomposer~</o> recomposes a plane wave decomposition into circular harmonics. There's three modes, <b>fixe</b> (default), <b>fisheye</b> and <b>free</b>. The <o>hoa.2d.recomposer~</o> can be controlled either by message or with the help of its dedicated graphical user interface <o>hoa.2d.recomposer</o>.
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">Julien Colafrancesco, Pierre Guillot, Eliott Paris.</metadata>
		<metadata name="tag">ambisonics</metadata>
		<metadata name="tag">hoa objects</metadata>
		<metadata name="tag">audio</metadata>
		<metadata name="tag">MSP</metadata>
	</metadatalist>

	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="ambisonic-order" optional="0" type="int">
			<digest>
				The ambisonic order of decomposition
			</digest>
			<description>
				First argument is the ambisonic order of decomposition.
			</description>
		</objarg>
		<objarg name="number-of-channels" optional="0" type="int">
			<digest>
				The number of channels
			</digest>
			<description>
				Second argument sets the number of channels.
			</description>
		</objarg>
		<objarg name="mode" optional="1" type="symbol">
			<digest>
				The recomposition mode
			</digest>
			<description>
				The third argument to <o>hoa.2d.recomposer~</o> object sets the recomposition mode. There is three modes :
				<ul>
				<li>In <b>fixe</b> mode the <o>hoa.2d.recomposer~</o> object simply recomposes a plane wave decomposition into circular harmonics</li>
				<li><o>hoa.2d.recomposer~</o>, used in <b>fisheye</b> mode, allows you to perform an operation similar to the visual "fisheye" effect by distorsion of the sound field perspective to the front of the scene.</li>
				<li>used in <b>free</b> mode, <o>hoa.2d.recomposer~</o> allows you to change the angles and the widening value for each channels. You can set these values directly with messages or with the use of the <o>hoa.2d.recomposer</o> GUI.</li>
				</ul>
			</description>
		</objarg>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="angles">
			<arglist />
			<digest>
				Set the angles of channels.
			</digest>
			<description>
				Set the angles of channels. Angles are in radians, wrapped between 0. and 2Ï€.
			</description>
		</method>
		<method name="float">
			<arglist />
			<digest>
				Set the fisheye factor in the last inlet (only in <b>fisheye</b> mode).
			</digest>
			<description>
				Set the fisheye factor in the last inlet (only in <b>fisheye</b> mode).
			</description>
		</method>
		<method name="signal">
			<arglist />
			<digest>
				Array of plane wave signals to be recomposed, fisheye factor.
			</digest>
			<description>
				Array of plane wave signals to be recomposed, fisheye factor in the last inlet in <b>fisheye</b> mode.
			</description>
		</method>
		<method name="wide">
			<arglist />
			<digest>
				Set the widening value of channels.
			</digest>
			<description>
				Set the widening value of channels. Widening value is clipped between 0. (omnidirectional) and 1. (directional).
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="ramp" get="1" set="1" type="float" size="1">
			<digest>
				Ramp Time (ms)
			</digest>
			<description>
				Ramp time in millisecond.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Ramp Time (ms)" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--DISCUSSION-->
	<discussion>
		<o>hoa.2d.recomposer~</o> recomposes a plane wave decomposition into circular harmonics. There's three modes, <b>fixe</b> (default), <b>fisheye</b> and <b>free</b>. The <o>hoa.2d.recomposer~</o> can be controlled either by message or with the help of its dedicated graphical user interface <o>hoa.2d.recomposer</o>.
	</discussion>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="hoa.2d.projector~" />
		<seealso name="hoa.2d.recomposer" />
		<seealso name="hoa.2d.space" />
		<seealso name="hoa.fx.gain~" />
		<seealso name="hoa.fx.delay~" />
		<seealso name="hoa.2d.encoder~" />
		<seealso name="hoa.2d.wider~" />
		<seealso name="hoa.2d.decoder~" />
		<seealso name="hoa.process~" />
		<seealso name="hoa.2d.meter~" />
		<seealso name="hoa.2d.scope~" />
	</seealsolist>

	<misc name = "Discussion">
		<entry name ="More details">
			<description>
		<o>hoa.2d.recomposer~</o> recomposes a plane wave decomposition into circular harmonics. There's three modes, <b>fixe</b> (default), <b>fisheye</b> and <b>free</b>. The <o>hoa.2d.recomposer~</o> can be controlled either by message or with the help of its dedicated graphical user interface <o>hoa.2d.recomposer</o>.
			</description>
		</entry>
		<entry name ="Keywords">
			<description>
			</description>
		</entry>
	</misc>

</c74object>