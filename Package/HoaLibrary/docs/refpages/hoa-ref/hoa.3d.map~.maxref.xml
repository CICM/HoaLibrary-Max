<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="hoa.3d.map~" module="hoa">

	<digest>
		A 3d ambisonic multisource spatializer
	</digest>

	<description>
		<o>hoa.3d.map~</o> is a tool that encodes several sources in the spherical harmonics domain, it's easy to use and work with the GUI <o>hoa.3d.map</o>. With a single source's configuration you can manage coordinates at signal rate
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">Julien Colafrancesco, Pierre Guillot, Eliott Paris.</metadata>
		<metadata name="tag">ambisonics</metadata>
		<metadata name="tag">hoa objects</metadata>
		<metadata name="tag">audio</metadata>
		<metadata name="tag">MSP</metadata>
	</metadatalist>

	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="ambisonic-order" optional="0" type="int">
			<digest>
				The ambisonic order of decomposition
			</digest>
			<description>
				First argument is the ambisonic order of decomposition.
			</description>
		</objarg>
		<objarg name="number-of-sources" optional="0" type="int">
			<digest>
				The number of sources
			</digest>
			<description>
				Second argument is the number of sources to spatialize.
				If there is a single source, <o>hoa.2d.map~</o> object owns 4 inlets, the first one correspond to the signal to encode, the three other ones can be used to control source position at control or signal rate. If you have more than one source to spatialize, the number of signal inlets will be equal to the number of sources to encode, and coordinates will be given with list messages.
			</description>
		</objarg>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="float">
			<arg name="coord" optional="0" type="float" />
			<digest>
				Set single source coordinate with messages depending on the mode.
			</digest>
			<description>
				Set single source coordinate with messages depending on the mode.
			</description>
		</method>
		<method name="int">
			<arg name="coord" optional="0" type="int" />
			<digest>
				Set single source coordinate with messages depending on the mode.
			</digest>
			<description>
				Set single source coordinate with messages depending on the mode.
			</description>
		</method>
		<method name="list">
			<arglist />
			<digest>
				Send source messages (coordinates and mute state).
			</digest>
			<description>
				Send source messages like coordinates and mute state. The list must be formatted like this : source-index input-mode radius azimuth elevation to set source positions or like this : source-index 'mute' mute-state to set the mute state of a source.
				marg 0 @name source-index @optional 0 @type int
				marg 1 @name input-mode/mute @optional 0 @type symbol
				marg 2 @name coord-1/mute-state @optional 0 @type float/int
				marg 3 @name coord-2 @optional 0 @type float
				marg 4 @name coord-3 @optional 0 @type float
			</description>
		</method>
		<method name="signal">
			<arglist />
			<digest>
				Sources signals to encode.
			</digest>
			<description>
				If you have a single source, the first signal inlet is for the source to encode, the three other ones are to control source position at signal rate. If you have more than one source to spatialize, all of the inputs represent a signal to encode and coordonates are given with messages.
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="ramp" get="1" set="1" type="float" size="1">
			<digest>
				Ramp Time (ms)
			</digest>
			<description>
				The ramp time in milliseconds.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Ramp Time (ms)" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--DISCUSSION-->
	<discussion>
		<o>hoa.3d.map~</o> is a tool that encodes several sources in the spherical harmonics domain, it's easy to use and work with the GUI <o>hoa.3d.map</o>. With a single source's configuration you can manage coordinates at signal rate
	</discussion>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="hoa.2d.map~" />
		<seealso name="hoa.3d.map" />
		<seealso name="hoa.3d.encoder~" />
		<seealso name="hoa.3d.decoder~" />
		<seealso name="hoa.3d.optim~" />
		<seealso name="hoa.3d.scope~" />
		<seealso name="hoa.3d.wider~" />
	</seealsolist>

	<misc name = "Discussion">
		<entry name ="More details">
			<description>
		<o>hoa.3d.map~</o> is a tool that encodes several sources in the spherical harmonics domain, it's easy to use and work with the GUI <o>hoa.3d.map</o>. With a single source's configuration you can manage coordinates at signal rate
			</description>
		</entry>
		<entry name ="Keywords">
			<description>
			</description>
		</entry>
	</misc>

</c74object>