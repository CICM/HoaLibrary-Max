<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="hoa.thisprocess~" module="hoa">

	<digest>
		Control hoa.process~ voice allocation, muting, argument and attributes.
	</digest>

	<description>
		Use the <o>hoa.thisprocess~</o> object to control <o>hoa.process~</o> voice allocation, muting, argument and attributes. When placed inside a patcher loaded by a <o>hoa.process~</o> object, it send and receive messages from the <o>hoa.process~</o> object that loads it.
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">Julien Colafrancesco, Pierre Guillot, Eliott Paris.</metadata>
		<metadata name="tag">ambisonics</metadata>
		<metadata name="tag">hoa objects</metadata>
		<metadata name="tag">msp</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				
			</digest>
			<description>
			</description>
		</inlet>
	</inletlist>

	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="arguments" optional="1" type="int/float/symbol">
			<digest>
				default arguments
			</digest>
			<description>
				A list of default arguments
			</description>
		</objarg>
		<objarg name="attributes" optional="1" type="int/float/symbol">
			<digest>
				default attributes
			</digest>
			<description>
				A list of default attributes
			</description>
		</objarg>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="bang">
			<arglist />
			<digest>
				Report the instance informations in a right to left outputting order.
			</digest>
			<description>
				Output instance informations in a right to left outputting order. <br/>
				At the very end, it will output a "done" message in the patcher attribute's outlet to indicate that all values have been sent<br/><br/>
				<ul>
				<li> mute state (0/1). </li>
				<li> patcher attributes. </li>
				<li> patcher arguments. </li>
				<li> process context and mode. ex : "2d harmonics", "3d planewaves" </li>
				<li>
				process instance informations depending on the current mode. <br/><br/>
				<ul>
				<li> In <b>harmonics</b> mode (2d/3d), it will be a list with (decomposition-order, harmonic-degree, harmonic-order) </li>
				<li> In <b>planewaves</b> mode (2d/3d), it will be a list with (number-of-channels, channel-index, channel-index)</li>
				</ul>
				</li>
				</ul>
			</description>
		</method>
		<method name="getmute">
			<arglist />
			<digest>
				Report mute state.
			</digest>
			<description>
				Report mute state only.
			</description>
		</method>
		<method name="mute">
			<arg name="value" optional="0" type="int" />
			<arg name="on/off-flag" optional="0" type="int" />
			<digest>
				Disable DSP processing for this patcher instance.
			</digest>
			<description>
				Turns off signal processing for this specific instance. Argument is the mute state, 0 means unmuted, others value means muted
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
	</attributelist>

	<!--DISCUSSION-->
	<discussion>
		Use the <o>hoa.thisprocess~</o> object to control <o>hoa.process~</o> voice allocation, muting, argument and attributes. When placed inside a patcher loaded by a <o>hoa.process~</o> object, it send and receive messages from the <o>hoa.process~</o> object that loads it.
	</discussion>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="hoa.process~" />
		<seealso name="hoa.in~" />
		<seealso name="hoa.in" />
		<seealso name="hoa.out" />
		<seealso name="hoa.out~" />
		<seealso name="thispoly~" />
		<seealso name="poly~" />
		<seealso name="thispatcher" />
		<seealso name="patcher" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlet 1">
			<description>
				.
			</description>
		</entry>
	</misc>

	<misc name = "Discussion">
		<entry name ="More details">
			<description>
		Use the <o>hoa.thisprocess~</o> object to control <o>hoa.process~</o> voice allocation, muting, argument and attributes. When placed inside a patcher loaded by a <o>hoa.process~</o> object, it send and receive messages from the <o>hoa.process~</o> object that loads it.
			</description>
		</entry>
		<entry name ="Keywords">
			<description>
			</description>
		</entry>
	</misc>

</c74object>